package com.cosac.TestCases;

import java.awt.Robot;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;

import org.sikuli.script.Screen;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.cosac.PageObject.Library;
import com.cosac.PageObject.LoginPage;
import com.google.gson.JsonParser;

public class COS30_CreditSanctioning extends LoginPage {
	public static String PersonalID = "3399889";
	public static String DOB = "1989";
	public static String FirstName = "Shalini";
	public static String LastName = "Amelia";
	public static String Address1 = "street1";
	public static String Address2 = "street2";
	public static String Address3 = "JM";
	public static String PostalCode = "12345";
	public static String Phone = "123456789";
	public static String Email = "ma@gmail.com";
	public static String productCode = "ORWE58";
	public static String productQuantity = "1";
	public static String DeliveryDay = "08";
	public static String PhoneAreaCode = "2300";
	public static String PhoneNumber = "2300";
	public static String TenderedAmount = "2300";

	public static String CustomerID = ".\\target\\COS30_CreditSaction\\CustomerID.png";
	public static String LinkingAccount = ".\\target\\COS30_CreditSaction\\LinkingAccount.png";
	public static String CreateReadyFinance = ".\\target\\COS30_CreditSaction\\ReadyFinance.png";
	public static String AddressAdd = ".\\target\\COS30_CreditSaction\\AddressAdd.png";
	public static String MatchingRecord = ".\\target\\COS30_CreditSaction\\MatchingRecord.png";
	public static String ResidentialButton = ".\\target\\COS30_CreditSaction\\ResidencialButton.png";
	public static String EmployeeStatus = ".\\target\\COS30_CreditSaction\\EmployeeStatus.png";
	public static String Employment = ".\\target\\COS30_CreditSaction\\Employment.png";
	public static String Category = ".\\target\\COS30_CreditSaction\\Category.png";
	public static String PayButton = ".\\target\\COS30_CreditSaction\\PayButton.png";
	public static String CloseTab = ".\\target\\COS30_CreditSaction\\CloseTab.png";
	public static String Approve = ".\\target\\COS30_CreditSaction\\Approve.png";
	public static String UW = ".\\target\\COS30_CreditSaction\\UW.png";
	public static String GreenButton = ".\\target\\COS30_CreditSaction\\GreenButton.png";
	public static String Comments = ".\\target\\COS30_CreditSaction\\Comments.png";
	public static String Reference2 = ".\\target\\COS30_CreditSaction\\Reference2.png";
	public static String References = ".\\target\\COS30_CreditSaction\\References.png";
	public static String EmployerDetals = ".\\target\\COS30_CreditSaction\\EmployerDetails.png";
	public static String S2 = ".\\target\\COS30_CreditSaction\\S2.png";
	public static String CurrResidentialSt = ".\\target\\COS30_CreditSaction\\CurrResidentialSt.png";
	public static String DD = ".\\target\\COS30_CreditSaction\\DD.png";
	public static String AddProductIcon = ".\\target\\COS30_CreditSaction\\AddProductIcon.png";
	public static String SaveIcon = ".\\target\\COS30_CreditSaction\\SaveIcon.png";
	public static String AccountNoBar = ".\\target\\COS30_CreditSaction\\AccountNoBar.png";
	public static String Transaction = ".\\target\\COS30_CreditSaction\\Transaction.png";
	public static String PaymentCustID = ".\\target\\COS30_CreditSaction\\PaymentCustID.png";
	public static String PaymentAmmount = ".\\target\\COS30_CreditSaction\\PaymentAmmount.png";
	public static String ProductCategory = ".\\target\\COS30_CreditSaction\\ProductCategory.png";
	public static String ProductCategory1 = ".\\target\\COS30_CreditSaction\\ProductCategory1.png";
	public static String Finnancial = ".\\target\\COS30_CreditSaction\\Finnancial.png";
	public static String Search = ".\\target\\COS30_CreditSaction\\Search.png";
	public static String Main = ".\\target\\COS30_CreditSaction\\Main.png";
	public static String CheckBox = ".\\target\\COS30_CreditSaction\\CheckBox.png";

	LoginPage login = new LoginPage();
	Robot robo1;

	// Verifying Credit--> Incomplete Credit Applications
	@Test
	public void COS30() throws Throwable {

		try {

			login.LoginCosacClient();
			Thread.sleep(13000);
			log.info("Client Application Steps");

			Thread.sleep(2000);
			Screen s = new Screen();
			robo1 = new Robot();
			robo1.keyPress(KeyEvent.VK_ALT);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_C);
			Thread.sleep(1000);
			robo1.keyRelease(KeyEvent.VK_C);
			Thread.sleep(500);
			robo1.keyRelease(KeyEvent.VK_ALT);
			log.info("User clicked on customer");
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_ENTER);
			log.info("User is able to click to New Customer");
			Thread.sleep(4000);
			s.find(CustomerID);
			s.mouseMove();
			Thread.sleep(700);
			s.click();
			log.info("User clicked on CustomerID");
			Thread.sleep(700);
			// System.out.println(JsonParser.getLocation_Data("locationData.cos01.CustomerID"));
			Library.Interaction.writeKeyboard(robo1, PersonalID);
			log.info("User entered on personalID");
			Thread.sleep(2000);
			s.find(LinkingAccount);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked on linking account");			
			Thread.sleep(1000);			
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			// Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_RIGHT);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_RIGHT);
			Thread.sleep(300);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, DOB);
			log.info("User entered DOB");
			Thread.sleep(1000);			
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(1000);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);	
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, FirstName);
			log.info("User entered first name");
			Thread.sleep(1000);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);	
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, LastName);
			log.info("User entered last name");			
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(3000);
			s.find(AddressAdd);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked on addressadd");
			Thread.sleep(4000);
			robo1.keyPress(KeyEvent.VK_TAB);			
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboardString(robo1, Address1);
			Thread.sleep(500);
			log.info("User entered first address1");
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboardString(robo1, Address2);
			log.info("User entered first address2");
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboardString(robo1, Address3);
			log.info("User entered first address3");
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, PostalCode);
			Thread.sleep(1000);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboard(robo1, PhoneAreaCode);
			log.info("User entered first phoneareacode");
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, PhoneNumber);
			log.info("User entered first phonenumber");
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, Email);
			log.info("User entered first Email");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(4000);
			s.find(CreateReadyFinance);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked readyfinance");
			Thread.sleep(7000);
			s.find(MatchingRecord);
			s.mouseMove();
			Thread.sleep(1000);
			s.click();
			log.info("User clicked matchingrecord");
			Thread.sleep(1000);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			String accountNO = Library.Interaction.copyText(robo1).replace("-", "");
			robo1.mousePress(InputEvent.BUTTON3_DOWN_MASK);
			robo1.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);
			Thread.sleep(2000);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_ENTER);
			Thread.sleep(7000);
			Thread.sleep(300);
			// Personal
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(4000);
			// Residential
			s.find(ResidentialButton);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked resedential button");
			Thread.sleep(1000);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_DELETE);
			Thread.sleep(500);
			Library.Interaction.writeKeyboard(robo1, "5");
			log.info("User entered 5");
			Thread.sleep(1000);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(4000);
			s.find(CurrResidentialSt);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked on current resedential");
			Thread.sleep(700);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_ENTER);
			Thread.sleep(4000);
			s.find(Employment);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked employment");
			Thread.sleep(2000);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DELETE);
			Thread.sleep(500);
			Library.Interaction.writeKeyboardString(robo1, "5");
			log.info("User entered 5");
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(4000);
			s.find(EmployeeStatus);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User entered first employee status");
			Thread.sleep(700);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_ENTER);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			// Pay Frequency
			Thread.sleep(2000);
			s.find(Finnancial);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked on financial");
			Thread.sleep(700);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "100000");
			log.info("User entered 100000 ");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "1000");
			log.info("User entered 1000 ");
			Thread.sleep(2000);
			s.find(Category);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked category");
			Thread.sleep(2000);
			s.find(ProductCategory1);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked productcategory1");
			Thread.sleep(700);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(3000);
			s.find(GreenButton);
			s.mouseMove();
			Thread.sleep(1000);
			s.click();
			log.info("User clicked greenbutton");
			Thread.sleep(3000);
			robo1.keyPress(KeyEvent.VK_ENTER);
			Thread.sleep(3000);
			s.find(S2);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked s2");
			Thread.sleep(7000);
			s.find(EmployerDetals);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked employedetails");
			Thread.sleep(700);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "Jerry");
			log.info("User entered  jerry");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "Street1");
			log.info("User entered street1");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "Street2");
			log.info("User entered street2");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "234567");
			log.info("User entered 234567");
			Thread.sleep(3000);
			s.find(References);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked references");
			Thread.sleep(700);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "Jack");
			log.info("User entered jack");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "Luis");
			log.info("User entered luis");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "HomeAdress1");
			log.info("User entered HomeAdress1");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "HomeAdress2");
			log.info("User entered HomeAdress2");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "8976554");
			log.info("User entered 8976554");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(3000);
			s.find(Reference2);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked Reference2 ");
			Thread.sleep(700);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "JackSecond");
			log.info("User entered JackSecond");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "Luis");
			log.info("User entered Luis");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "HomeAdress3");
			log.info("User entered HomeAdress3");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "HomeAdress4");
			log.info("User entered HomeAdress4");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "8976558");
			log.info("User entered 8976558");
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(3000);
			s.find(Comments);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked comments");
			Thread.sleep(2500);
			s.find(GreenButton);
			s.mouseMove();
			Thread.sleep(3000);
			s.click();
			log.info("User clicked greenbutton");
			Thread.sleep(3000);
			s.find(DD);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked DD");
			Thread.sleep(2000);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(700);
			// Proof Of ID
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "23456780");
			log.info("User entered 23456780");
			Thread.sleep(300);
			// Proof of Income
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "kl097654");
			log.info("User entered kl097654");
			// Proof Of Address
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			Library.Interaction.writeKeyboardString(robo1, "kl09765hg");
			log.info("User entered kl09765hg");
			Thread.sleep(4000);
			s.find(GreenButton);
			s.mouseMove();
			Thread.sleep(1000);
			s.click();
			log.info("User  GreenButton");
			Thread.sleep(3000);
			s.find(Main);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			Thread.sleep(500);
			// for credit option
			Thread.sleep(4000);
			robo1.keyPress(KeyEvent.VK_ALT);
			robo1.keyPress(KeyEvent.VK_R);
			robo1.keyRelease(KeyEvent.VK_R);
			robo1.keyRelease(KeyEvent.VK_ALT);
			log.info("user clicked on credit");
			Thread.sleep(2000);
			robo1.keyPress(KeyEvent.VK_SHIFT);
			robo1.keyPress(KeyEvent.VK_I);
			robo1.keyRelease(KeyEvent.VK_I);
			robo1.keyRelease(KeyEvent.VK_SHIFT);
			log.info("user clicked on incomplete credit applications");
			Thread.sleep(3000);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			Library.Interaction.writeKeyboardString(robo1, "910");
			Thread.sleep(500);
			s.find(Search);
			log.info("serach");
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			Thread.sleep(2000);
			s.mouseMove();
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(1000);
			s.find(CheckBox);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			Thread.sleep(2000);
			log.info("user unchecked 1st checkbox");		
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(1000);
			s.find(CheckBox);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			Thread.sleep(2000);
			log.info("user unchecked 2nd checkbox");	
			s.find(Search);
			log.info("serach");
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			Thread.sleep(2000);	
			s.find(MatchingRecord);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			Thread.sleep(2000);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			String str = accountNO;
			String previous_str = "";
			Boolean flag_one = true;
			while (flag_one) {
				String result1 = Library.Interaction.copyText(robo1);
				System.out.println(result1);

				if (previous_str.equals(result1)) {
					flag_one = false;
				}
				if (flag_one) {
					if (str.equals(result1)) {
						System.out.println("Entered the result=" + result1);
						robo1.keyPress(KeyEvent.VK_ENTER);

						robo1.mousePress(InputEvent.BUTTON2_DOWN_MASK);
						robo1.mouseRelease(InputEvent.BUTTON2_DOWN_MASK);
						Thread.sleep(100);
						break;
					} else {
						robo1.keyPress(KeyEvent.VK_DOWN);
						previous_str = result1;
					}
				} else {
					break;
				}
			}
			System.out.println("Execution Ended");
			//UW 
			Thread.sleep(3000);
			s.find(UW);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked UW");
			Thread.sleep(3000);
			s.find(Approve);
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			log.info("User clicked Approve");
			Thread.sleep(2500);
			s.find(GreenButton);
			s.mouseMove();
			Thread.sleep(1000);
			s.click();
			log.info("User clicked GreenButton");
			Thread.sleep(4000);
		} catch (Exception e) {
			driver.close();
			e.printStackTrace();
			Assert.assertFalse(false);
		}
	}
	}
			
			
			
			
			