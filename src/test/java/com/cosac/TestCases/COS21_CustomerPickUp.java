package com.cosac.TestCases;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.event.KeyEvent;
//Here we are Creating and Verifying New Store Location in Country
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.List;
import java.util.concurrent.TimeUnit;

import javax.swing.plaf.ToolTipUI;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.winium.WiniumDriver;
import org.sikuli.script.Screen;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.cosac.Locators.Id;
import com.cosac.Locators.Name;
import com.cosac.Locators.Xpath;

import com.cosac.PageObject.Library;
import com.cosac.PageObject.LoginPage;
import com.cosac.Utilities.JsonParser;

public class COS21_CustomerPickUp extends LoginPage {
	
	
	LoginPage login=new LoginPage();
	Screen s;
	
    //Verifying Create--> Location.
	@Test
	public void Client() throws Throwable
	{
		try {
			
		login.LoginCosacClient();

            Thread.sleep(15000);
            s = new Screen();
			

			Robot robo1 = new Robot();
			
			
			robo1.keyPress(KeyEvent.VK_ALT);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_C);
			Thread.sleep(1000);
			robo1.keyRelease(KeyEvent.VK_C);
			Thread.sleep(500);
			robo1.keyRelease(KeyEvent.VK_ALT);
			
			
			
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_ENTER);
			//log.info("User is able to click to New Customer");
			Thread.sleep(7000);

			s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.CustomerID"));
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			Thread.sleep(500);
			//System.out.println(JsonParser.getLocation_Data("locationData.cos01.CustomerID"));
			Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.CustomerID"));
			Thread.sleep(2000);
			s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.LinkingAccount"));
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			//s.mouseMove();
			Thread.sleep(1000);
			//robo1.keyPress(KeyEvent.VK_TAB);
			// Thread.sleep(3000);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			//Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_RIGHT);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_RIGHT);
			Thread.sleep(300);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.DOB"));
			Thread.sleep(1000);
			//Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(1000);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			//Thread.sleep(1000);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.FirstName"));
			Thread.sleep(1000);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			//Thread.sleep(1000);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.LastName"));
			//Thread.sleep(1000);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_DOWN);
            Thread.sleep(3000);
			s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.AddressAdd"));
			s.mouseMove();
			//Thread.sleep(1000);
			Library.Interaction.userWait();
			s.click();
			Thread.sleep(3000);
			robo1.keyPress(KeyEvent.VK_TAB);
			//Thread.sleep(1000);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.Address1"));
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			//Thread.sleep(1000);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.Address3"));
			Thread.sleep(500);
			Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			//Thread.sleep(1000);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.AreaCode"));
			Thread.sleep(1000);
			robo1.keyPress(KeyEvent.VK_TAB);
			//Thread.sleep(3000);
			//Library.Interaction.writeKeyboard(robo1, "+76");
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.Phone"));
			Thread.sleep(500);
			//Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			//Thread.sleep(1000);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.Extenssion"));
			Thread.sleep(500);
			//Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			//Thread.sleep(5000);

			//Library.Interaction.writeKeyboard(robo1, "vk01@abc.com");
			Thread.sleep(500);
			//Library.Interaction.userWait();
			robo1.keyPress(KeyEvent.VK_TAB);
			//Thread.sleep(1000);
			Library.Interaction.userWait();
			Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.Mobile"));
			//s.mouseMove();
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_DOWN);
			Thread.sleep(4000);
			s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.CreateCASHAccount"));
			s.mouseMove();
			Thread.sleep(500);
			s.click();
			Thread.sleep(15000);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_DOWN);
            Thread.sleep(200);
            robo1.keyPress(KeyEvent.VK_DOWN);
            Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.productCode"));
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(500);
			
			robo1.keyPress(KeyEvent.VK_CONTROL);
		    Thread.sleep(200);
		    robo1.keyPress(KeyEvent.VK_C);
		    Thread.sleep(200);
		    robo1.keyRelease(KeyEvent.VK_C);
		    Thread.sleep(200);
		    robo1.keyRelease(KeyEvent.VK_CONTROL);
		    Thread.sleep(500);
		    Toolkit toolkit1 = Toolkit.getDefaultToolkit();
			Clipboard clipboard1 = toolkit1.getSystemClipboard();
			String result1 = (String) clipboard1.getData(DataFlavor.stringFlavor);
			String BranchCOde=result1;
			System.out.println("BranchCOde are: "+BranchCOde);
			
			Thread.sleep(500);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(200);
			Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.productQuantity"));
			Thread.sleep(200);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
			robo1.keyPress(KeyEvent.VK_TAB);
			Thread.sleep(300);
	        robo1.keyPress(KeyEvent.VK_DOWN);
	        Thread.sleep(200);
		    robo1.keyPress(KeyEvent.VK_TAB);
			//Thread.sleep(200);
			//Library.Interaction.writeKeyboard(robo1, JsonParser.CashAccount_Data("CashAndGo.NewCustomerCASHAccount.DeliveryInstructions"));
			Thread.sleep(700);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    //Thread.sleep(3000);
		    //robo1.keyPress(KeyEvent.VK_ENTER);
		    Thread.sleep(200);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
	        robo1.keyPress(KeyEvent.VK_DOWN);
	        Thread.sleep(300);
	        robo1.keyPress(KeyEvent.VK_DOWN);
	        Thread.sleep(300);
	        robo1.keyPress(KeyEvent.VK_DOWN);
	        Thread.sleep(200);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(200);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(200);
	        robo1.keyPress(KeyEvent.VK_DOWN);
	        Thread.sleep(300);
	        robo1.keyPress(KeyEvent.VK_DOWN);
	        Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.DeliveryDay"));
		    Thread.sleep(4000);
		    s.find(JsonParser.getSikuliScreePath("CashAndGoScreens.CustomerPickUp.Immediate"));
		    s.mouseMove();
			Thread.sleep(500);
		    s.click();
		    Thread.sleep(4000);
		    s.find(JsonParser.getSikuliScreePath("CashAndGoScreens.CustomerPickUp.expressDelivery"));
		    s.mouseMove();
			Thread.sleep(500);
		    s.click();
		    Thread.sleep(4000);
		    s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.AddProductIcon"));
		    s.mouseMove();
			Thread.sleep(500);
		    s.click();
		    
		    
		    Thread.sleep(4000);
		    s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.AddProductIcon"));
		    s.mouseMove();
			Thread.sleep(500);
		    s.click();
		    Thread.sleep(4000);
		    robo1.keyPress(KeyEvent.VK_ENTER);
		    Thread.sleep(3000);
		    s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.SaveIcon"));
		    s.mouseMove();
			Thread.sleep(500);
		    s.click();
		    Thread.sleep(10000);
		    s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.AccountNoBar"));
		    s.mouseMove();
			Thread.sleep(300);
		    s.click();
		    Thread.sleep(2000);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(200);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(200);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(200);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(200);
		    robo1.keyPress(KeyEvent.VK_CONTROL);
		    Thread.sleep(200);
		    robo1.keyPress(KeyEvent.VK_C);
		    Thread.sleep(200);
		    robo1.keyRelease(KeyEvent.VK_C);
		    Thread.sleep(200);
		    robo1.keyRelease(KeyEvent.VK_CONTROL);
		    Thread.sleep(500);
		    Toolkit toolkit = Toolkit.getDefaultToolkit();
			Clipboard clipboard = toolkit.getSystemClipboard();
			String result = (String) clipboard.getData(DataFlavor.stringFlavor);
			String AccountNum=result.replace("-", "");
			
		    Thread.sleep(4000);
		    s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.CloseTab"));
		    s.mouseMove();
			Thread.sleep(500);
		    s.click();
		    Thread.sleep(3000);
		    robo1.keyPress(KeyEvent.VK_ENTER);
		    //Thread.sleep(10000);
		    Thread.sleep(5000);
		    s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.Transaction"));
		    s.mouseMove();
			Thread.sleep(300);
		    s.click();
		    Thread.sleep(2000);
		    robo1.keyPress(KeyEvent.VK_DOWN);
		    Thread.sleep(200);
		    robo1.keyPress(KeyEvent.VK_ENTER);
		    Thread.sleep(1000);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_CONTROL);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_V);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_V);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_CONTROL);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_CONTROL);
		    Thread.sleep(300);
            robo1.keyPress(KeyEvent.VK_TAB);
		    //Thread.sleep(5000);
		    //Thread.sleep(2000);
		    Thread.sleep(3000);
		    s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.PaymentCustID"));
		    s.mouseMove();
			Thread.sleep(500);
		    s.click();
		    Thread.sleep(4000);
		    s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.PaymentAmmount"));
			s.find("C:\\Users\\InfoGlobal_Tech3\\eclipse-workspace\\COSAC_CLIENT\\target\\PaymentAmmount.png");
			s.mouseMove();
			Thread.sleep(500);
		    s.click();
		    Thread.sleep(15000);
		    robo1.keyPress(KeyEvent.VK_CONTROL);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_C);
		    Thread.sleep(300);
		    robo1.keyRelease(KeyEvent.VK_C);
		    Thread.sleep(300);
		    robo1.keyRelease(KeyEvent.VK_CONTROL);   
		
		    Thread.sleep(1000);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(1000);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(1500);
		    robo1.keyPress(KeyEvent.VK_ENTER);
		    Thread.sleep(3000);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_DOWN);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    robo1.keyPress(KeyEvent.VK_TAB);
		    Thread.sleep(300);
		    Library.Interaction.writeKeyboard(robo1, JsonParser.CustPickUp_Data("CashAndGo.CustPickup.TenderedAmount"));
		    //Library.Interaction.writeKeyboard(robo1, "10000");
		   // Thread.sleep(3000);
			   //s.find("C:\\Users\\InfoGlobal_Tech3\\eclipse-workspace\\COSAC_CLIENT\\target\\PaymentAmmount.png");
			   //s.mouseMove();
				//Thread.sleep(500);
			   // s.click();
			    Thread.sleep(3000);
			    s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.PayButton"));
				s.mouseMove();
				Thread.sleep(500);
				s.click();
				    /*Thread.sleep(7000);
				    robo1.keyPress(KeyEvent.VK_TAB);
				    Thread.sleep(2000);
				    robo1.keyPress(KeyEvent.VK_TAB);
				    Thread.sleep(1000);
				    robo1.keyPress(KeyEvent.VK_TAB);
				    Thread.sleep(1000);
				    robo1.keyPress(KeyEvent.VK_TAB);
				    Thread.sleep(3000);
				    robo1.keyPress(KeyEvent.VK_TAB);
				    Thread.sleep(1000);
				    robo1.keyPress(KeyEvent.VK_ENTER);
				    Thread.sleep(3000);
				    s.find(JsonParser.getSikuliScreePath("CashAndGoScreensPath.NewCustCASHAccount.CloseClient"));
					//s.find("C:\\Users\\InfoGlobal_Tech3\\eclipse-workspace\\COSAC_CLIENT\\target\\CloseClient.png"); 
					s.mouseMove();
					Thread.sleep(500); 
					s.click();*/
			//Library.Interaction.userWait();
				 login.LoginCosacWeb();
				 Library.Interaction.userWait();
				 Library.Interaction.clickByXpath(Xpath.CustPickup.Logistic);
				 Library.Interaction.userWait();
				 Library.Interaction.clickByXpath(Xpath.CustPickup.customerPickUp);
				 Library.Interaction.userWait();
				 Library.Interaction.selectAndSerachEle(Xpath.CustPickup.DeliveryBranch, Xpath.CustPickup.searchDeliveryBranch,Xpath.CustPickup.selectDeliveryBranch, "172");
				 Library.Interaction.userWait();
				 //Library.Interaction.clickByXpath(Xpath.CustPickup.printReturnNote);
				 //Library.Interaction.ExplicitWait(Xpath.CustPickup.NewReturnNote);
				 Library.Interaction.clickByXpath(Xpath.CustPickup.reprintButton);
				 //driver.findElement(By.xpath(Xpath.CustPickup.reprintButton)).click();
				 Library.Interaction.userWait();
				 Thread.sleep(4000);
				 driver.findElement(By.xpath(Xpath.CustPickup.reprintOk)).click();
				 Thread.sleep(4000);
				 Object[] win=driver.getWindowHandles().toArray();
				 String arr1=win[0].toString();
				 String arr2=win[1].toString();
				 driver.switchTo().window(arr2);
				 //Library.Interaction.ExplicitWait(Xpath.CustPickup.ReturnNote);
				 String str=Library.Interaction.getOnlyNumbers(Xpath.CustPickup.ReturnNote);
				 System.out.println(str);
				 Thread.sleep(4000);
				 
				 Library.Interaction.userWait();
				 driver.close();
				 Library.Interaction.ExplicitWait(Xpath.CustPickup.ok);
				 Library.Interaction.clickByXpath(Xpath.CustPickup.ok);
				 Library.Interaction.userWait();
				 Library.Interaction.clickByXpath(Xpath.CustPickup.Logistic);
				 Library.Interaction.userWait();
				 Library.Interaction.clickByXpath(Xpath.CustPickup.searchShipment);
				 
					

		
			Thread.sleep(10000);

		} catch (Exception e) {
			//windriver.close();
			/*
			 * s.find(JsonParser.getSikuliScreePath(
			 * "CashAndGoScreensPath.NewCustCASHAccount.Custome")); //Thread.sleep(5000);
			 * s.mouseMove(); Thread.sleep(3000); s.click();
			 */
		}
		
		
	}
     
 }

